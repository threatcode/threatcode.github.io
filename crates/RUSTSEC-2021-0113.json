{
  "id": "RUSTSEC-2021-0113",
  "modified": "2021-09-18T21:35:48Z",
  "published": "2021-04-07T12:00:00Z",
  "aliases": [],
  "related": [],
  "summary": "AtomicBucket<T> unconditionally implements Send/Sync",
  "details": "In the affected versions of the crate, `AtomicBucket<T>` unconditionally implements `Send`/`Sync` traits. Therefore, users can create a data race to the inner\n`T: !Sync` by using the `AtomicBucket::data_with()` API.\nSuch data races can potentially cause memory corruption or other undefined behavior.\n\nThe flaw was fixed in commit 8e6daab by adding appropriate Send/Sync bounds to the Send/Sync impl of struct `Block<T>` (which is a data type contained inside `AtomicBucket<T>`).",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "metrics-util",
        "purl": "pkg:cargo/metrics-util"
      },
      "ecosystem_specific": {
        "affects": {
          "arch": [],
          "os": [],
          "functions": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-corruption",
          "thread-safety"
        ],
        "cvss": null,
        "informational": null
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "0.7.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/metrics-util"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0113.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/metrics-rs/metrics/issues/190"
    }
  ]
}