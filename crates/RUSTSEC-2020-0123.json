{
  "id": "RUSTSEC-2020-0123",
  "modified": "2021-10-19T22:14:35Z",
  "published": "2020-01-24T12:00:00Z",
  "aliases": [
    "CVE-2020-36443"
  ],
  "related": [],
  "summary": "Contents of uninitialized memory exposed in DeflateOutput's AsyncRead implementation",
  "details": "Affected versions of this crate passes an uninitialized buffer to a user-provided trait function `AsyncRead::poll_read()`.\n\nArbitrary `AsyncRead::poll_read()` implementations can read from the uninitialized buffer (memory exposure) and also can return incorrect number of bytes written to the buffer.\nReading from uninitialized memory produces undefined values that can quickly invoke undefined behavior.\n\nThe flaw was fixed in commit 5ba266a by ensuring the newly allocated part of the buffer is zero-initialized before passing it to a user-provided `AsyncRead::poll_read()`.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libp2p-deflate",
        "purl": "pkg:cargo/libp2p-deflate"
      },
      "ecosystem_specific": {
        "affects": {
          "arch": [],
          "os": [],
          "functions": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-exposure"
        ],
        "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "informational": null
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "0.27.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/libp2p-deflate"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0123.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/libp2p/rust-libp2p/issues/1932"
    }
  ]
}