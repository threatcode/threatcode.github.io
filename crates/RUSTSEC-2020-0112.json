{
  "id": "RUSTSEC-2020-0112",
  "modified": "2021-10-19T22:14:35Z",
  "published": "2020-12-18T12:00:00Z",
  "aliases": [
    "CVE-2020-36218"
  ],
  "related": [],
  "summary": "ButtplugFutureStateShared allows data race to (!Send|!Sync) objects",
  "details": "`ButtplugFutureStateShared<T>` implements `Send` & `Sync` regardless of `T`.\n\nIf `T: !Send` for `ButtplugFutureStateShared<T>`, it is possible to move non-Send types across thread boundaries (e.g. `T`=`Rc<T>`) and lead to undefined behavior.\nIf `T: !Sync` for `ButtplugFutureStateShared<T>`, it is possible to cause data race to `T` (e.g. `T`=`Arc<Cell<_>>`) and lead to undefined behavior.\n\nThe flaw was corrected in version 1.0.4 by removing manual implementations of `Send`/`Sync` for `ButtplugFutureStateShared<T>` to let rustc generate auto trait implementations with correct trait bounds on `T`.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "buttplug",
        "purl": "pkg:cargo/buttplug"
      },
      "ecosystem_specific": {
        "affects": {
          "arch": [],
          "os": [],
          "functions": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-corruption",
          "thread-safety"
        ],
        "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "informational": null
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "1.0.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/buttplug"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0112.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/buttplugio/buttplug-rs/issues/225"
    }
  ]
}