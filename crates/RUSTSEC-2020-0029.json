{
  "id": "RUSTSEC-2020-0029",
  "modified": "2021-10-19T22:14:35Z",
  "published": "2020-06-14T12:00:00Z",
  "aliases": [
    "CVE-2020-25016"
  ],
  "related": [],
  "summary": "Allows viewing and modifying arbitrary structs as bytes",
  "details": "Affected versions of rgb crate allow viewing and modifying data of any type `T` wrapped in `RGB<T>` as bytes,\nand do not correctly constrain `RGB<T>` and other wrapper structures to the types for which it is safe to do so.\n\nSafety violation possible for a type wrapped in `RGB<T>` and similar wrapper structures:\n\n * If `T` contains padding, viewing it as bytes may lead to exposure of contents of uninitialized memory.\n * If `T` contains a pointer, modifying it as bytes may lead to dereferencing of arbitrary pointers.\n * Any safety and/or validity invariants for `T` may be violated.\n \nThe issue was resolved by requiring all types wrapped in structures provided by RGB crate to implement an unsafe marker trait.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rgb",
        "purl": "pkg:cargo/rgb"
      },
      "ecosystem_specific": {
        "affects": {
          "arch": [],
          "os": [],
          "functions": []
        }
      },
      "database_specific": {
        "categories": [],
        "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
        "informational": "unsound"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.5.4"
            },
            {
              "fixed": "0.8.20"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/rgb"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0029.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/kornelski/rust-rgb/issues/35"
    }
  ]
}